#summary blogチュートリアル(10) まとめとカスタマイズ
#sidebar TableOfBlogTutorial

== プログラムは無事に動きましたか？ ==

BEARの多くの設計はHTTP/RESTをモデルとしているのがお分かりいただけたでしょうか？HTTPでは、リクエストの仕方、レスポンスのフォーマットが（たとえエラーでも）同じで、またサーバーサイドがどの言語で書かれてるかにクライアントは関心を持ちません。同じようにBEARではぺージクライアントまたはCLIクライアントはリソース側でphpのmysql関数を使っているか、Doctorine ORMを使ってるかに関心がありません。単なるデータソースなのかオブジェクトモデルなのかも分かりません。

モデルが何であるか、テンプレートエンジンが何であるか、各コンポーネントの選択をBEARはアプリケーション側のドメインだと考え、入れ替え可能にし、コンポーネントよりむしろその接続に注目しようと考えます。

== カスタマイズ例 ==

更なる理解のためにいくつかカスタマイズしてみましょう。

 * [blog_pager カスタマイズ編 リソースのページングと表示順]
 * [blog_aop カスタマイズ編 投稿日時・更新日時の自動挿入とトランザクション(AOP)]
 * [blog_cache カスタマイズ編 キャッシュ]



== bear-demo ==

他にdemoサイトも用意されてます。オンラインでコードやライブデモを見ることができます。demoサイトはよくあるサイトのページパターン（確認フォームなど）を汎用的に集めることを目的の一つとしてます。GitHubでホストされてるのでforkしてあなたの作った便利なページパターンも公開してみましょう。

 * [http://code.google.com/p/bear-demo/wiki/top Google Code bear-demo]
 * [https://github.com/koriym/beardemo.local GitHub:beardemo.local]

Note:
   bear-demoはBEARの動作テストも目的としてます。

== BEARで始めるWebアプリケーション開発 ==

 * [http://d.hatena.ne.jp/stellaqua/ Stellaqua - ＴＯＭの技術日記]の[tom_blog BEARブログ記事]も参考にしましょう。